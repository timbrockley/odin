#+feature dynamic-literals

package main

import "core:fmt"

main :: proc() {
	//----------------------------------------
	for i := 0; i < 10; i += 1 {
		fmt.print(i)
	}
	//----------------------------------------
	fmt.println()
	//----------------------------------------
	for i := 0; i < 10; i += 1 do fmt.print(i)
	//----------------------------------------
	fmt.println()
	//----------------------------------------
	i := 0
	for i < 10 {
		fmt.print(i)
		i += 1
	}
	//----------------------------------------
	fmt.println()
	//----------------------------------------
	for {
		fmt.print("0123456789")
		break
	}
	//----------------------------------------
	fmt.println()
	//----------------------------------------
	for i in 0 ..< 10 {
		fmt.print(i)
	}
	//----------------------------------------
	fmt.println()
	//----------------------------------------
	for i in 0 ..= 9 {
		fmt.print(i)
	}
	//----------------------------------------
	fmt.println()
	//----------------------------------------
	for character, index in "0123456789" {
		fmt.printf("%d: \"%c\"  ", index, character)
	}
	//----------------------------------------
	fmt.println()
	//----------------------------------------
	array := [?]int{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}
	for value in array {
		fmt.printf("%d", value)
	}
	//----------------------------------------
	fmt.println()
	//----------------------------------------
	#reverse for value in array {
		fmt.printf("%d", value)
	}
	//----------------------------------------
	fmt.println()
	//----------------------------------------
	some_map := map[string]int {
		"A" = 1,
		"B" = 2,
		"C" = 3,
	}

	defer delete(some_map)

	for key, &value in some_map {
		fmt.printf("\"%s\": %d  ", key, value)
	}
	//----------------------------------------
	fmt.println()
	//----------------------------------------
}
