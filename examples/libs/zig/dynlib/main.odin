package main

import "core:dynlib"
import "core:fmt"

Symbols :: struct {
	add:         proc "c" (_: i32, _: i32) -> i32,
	sub:         proc "c" (_: i32, _: i32) -> i32,
	_lib_handle: dynlib.Library,
}

main :: proc() {
	//----------------------------------------
	a: i32 : 5
	b: i32 : 3
	result: i32
	//----------------------------------------
	LIBRARY_PATH :: "libmath.so"
	//----------------------------------------
	sym: Symbols
	//----------------------------------------
	count, ok := dynlib.initialize_symbols(&sym, LIBRARY_PATH, "", "_lib_handle")
	//----------------------------------------
	if ok {
		//----------------------------------------
		defer dynlib.unload_library(sym._lib_handle)
		//----------------------------------------
		if count > 0 {
			//----------------------------------------
			result = sym.add(a, b)
			//----------------------------------------
			fmt.printfln("add(%d, %d) = %d", a, b, result)
			//----------------------------------------
			result = sym.sub(a, b)
			//----------------------------------------
			fmt.printfln("sub(%d, %d) = %d", a, b, result)
			//----------------------------------------
		}
		//----------------------------------------
	} else {
		//----------------------------------------
		fmt.eprintln(dynlib.last_error())
		//----------------------------------------
	}
	//----------------------------------------
}
